---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.


import "./global.scss"

interface Props {
	author? : string
	title?: string
	description? : string
	image? : string
	tags? : string[]
	pubDate? : Date 
	updatedDate? : Date 
	genre? : string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image, author, pubDate, updatedDate, tags, genre } = Astro.props;

const pageImage = image ? image : "placeholder.webp"
const pageDescription = description!.length > 160 ? description!.slice(0, 160) : description
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/logo.webp" />
<meta name="generator" content={Astro.generator} />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="copyright" content="Pixel Poetry">
<meta name="referrer" content="always">


<!-- icon library -->
<script src="https://kit.fontawesome.com/1882ba5dd5.js" crossorigin="anonymous" defer></script>


<!-- Canonical URL -->
<!-- <link rel="canonical" href={canonicalURL} /> -->

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={pageDescription} />
<meta name="thumbnail" content={new URL(pageImage, Astro.url)} >
<meta name="robots" content="noodp, noydir, max-image-preview:large">

<link rel="sitemap" href="/sitemap-index.xml" />

<!-- article details -->
{genre &&
<meta property="category" content={genre} >
<meta property="article:tag" content={genre} >
}

{tags &&
tags.map((tag) => {
	return <meta property="article:tag" content={tag} >
})
}

{author &&
<meta property="article:author" content={author} >
}

{tags &&
	<meta name="cXenseParse:keywords" content={tags.join(",")}>
}

{pubDate &&
<meta property="article:published_time" content={pubDate.toString()} >
}

{updatedDate &&
<meta property="article:modified_time" content={updatedDate.toString()} >
}

<meta name="section" content="article" >


<!-- Open Graph / Facebook -->
<meta property="og:type" content={author ? "article" : "website"} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={pageDescription} />
<meta property="og:image" content={new URL(pageImage, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={pageDescription} />
<meta property="twitter:image" content={new URL(pageImage, Astro.url)} />
